
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'
  JAVA_VERSION: '17'

jobs:
  # ========== BUILD BACKEND ==========
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Build backend
        working-directory: ./backend
        run: npm run build --if-present

  # ========== BUILD MOBILE (Expo) ==========
  build-mobile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Install Expo CLI
        run: npm install -g expo-cli
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Android
        working-directory: ./android
        run: ./gradlew assembleRelease

  # ========== TEST BACKEND ==========
  test-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: odontologia_carol_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Run tests
        working-directory: ./backend
        run: npm test -- --coverage
        env:
          DB_HOST: localhost
          DB_USER: root
          DB_PASSWORD: test_password
          DB_NAME: odontologia_carol_test

  # ========== TEST MOBILE ==========
  test-mobile:
    runs-on: ubuntu-latest
    needs: build-mobile
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - run: npm ci
      - run: npm test -- --coverage


