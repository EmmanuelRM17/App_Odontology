
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'
  JAVA_VERSION: '17'

jobs:
  # ========================================
  # BUILD BACKEND
  # ========================================
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install --legacy-peer-deps
      
      - name: Build backend
        working-directory: ./backend
        run: npm run build --if-present
      
      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/
          retention-days: 1

  # ========================================
  # BUILD MOBILE APP (Expo/React Native)
  # ========================================
  build-mobile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Install Expo CLI
        run: npm install -g expo-cli
      
      - name: Install mobile dependencies
        run: npm install --legacy-peer-deps
      
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Make gradlew executable
        working-directory: ./android
        run: chmod +x ./gradlew
      
      - name: Build Android APK
        working-directory: ./android
        run: ./gradlew assembleRelease --no-daemon
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 1

  # ========================================
  # TEST BACKEND
  # ========================================
  test-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: odontologia_carol_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install --legacy-peer-deps
      
      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 --silent; then
              echo "MySQL is ready"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done
      
      - name: Run backend tests
        working-directory: ./backend
        run: npm test -- --coverage --forceExit --detectOpenHandles
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: test_password
          DB_NAME: odontologia_carol_test
          NODE_ENV: test
          JWT_SECRET: test_secret_key
      
      - name: Upload backend coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  # ========================================
  # TEST MOBILE APP
  # ========================================
  test-mobile:
    runs-on: ubuntu-latest
    needs: build-mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - run: npm ci
      - run: npm test -- --coverage


